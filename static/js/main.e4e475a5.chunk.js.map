{"version":3,"sources":["lib.js","QuoteBuilder.js","App.js","serviceWorker.js","index.js"],"names":["garments","name","description","imageUrl","basePrice","breaksAsList","priceBreaks","12","color1","color2","color3","color4","color5","color6","color1PerSide","color2PerSide","color3PerSide","color4PerSide","color5PerSide","color6PerSide","24","48","72","144","288","576","1000","buildPriceBreak","numShirts","num","lowerBreak","Math","max","filter","opt","upperBreak","min","getUpperBreak","defaultBreak","priceBreak","Object","keys","forEach","attribute","lowerBreakPrice","slope","calculateQuote","garmentName","numColors","numSides","nameString","activeBreak","getBaseColorPrice","find","g","getPerSideColorPrice","toFixed","printLocations","label","id","InputFeedback","error","className","classNames","Checkbox","field","value","onChange","onBlur","form","errors","touched","setFieldValue","type","checked","htmlFor","CheckboxGroup","props","handleChange","event","target","currentTarget","valueArray","push","splice","indexOf","handleBlur","this","children","classes","React","Children","map","child","cloneElement","includes","Component","RadioButton","RadioButtonGroup","InputField","QuoteBuilder","garment","useState","isCalculating","setIsCalculating","quote","setQuote","initialValues","validationSchema","Yup","shape","moreThan","lessThan","required","onSubmit","values","actions","setTimeout","parseInt","numLocations","l","length","calculated","setSubmitting","render","handleSubmit","setFieldTouched","isSubmitting","placeholder","key","component","printLocation","disabled","App","activeGarmentName","setActiveGarmentName","i","isActive","src","alt","onClick","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4e475a5.chunk.js","sourcesContent":["export const garments = [\n  {\n    name: \"Tri Blend\",\n    description:\n      \"Lorem ipsum dolor amet polaroid cray ethical, yr esse typewriter hoodie vinyl qui. DIY nulla salvia, gluten-free venmo franzen cloud bread beard bicycle rights humblebrag put a bird on it.\",\n    imageUrl:\n      \"https://mms-images-prod.imgix.net/mms/images/catalog/ab9f30d4a3d2ebd8cae5ee163c55e5e5/colors/169902/views/alt/front_large_extended.png?ixlib=rails-2.1.4&w=412&h=470&fit=fill&dpr=1&bg=ffffff&fm=pjpg&trim=auto&trimmd=0&q=39&auto=compress\",\n    basePrice: 4.0\n  },\n  {\n    name: \"100% Cotton\",\n    description:\n      \"Lorem ipsum dolor nulla aute YOLO readymade consectetur incididunt. Tempor viral williamsburg, quinoa you probably haven't heard of them messenger bag selvage enim twee hexagon woke knausgaard cardigan.\",\n    imageUrl:\n      \"https://mms-images-prod.imgix.net/mms/images/catalog/4d2bd9d40fe640846663390c8f518cb1/colors/297300/views/alt/front_large_extended.png?ixlib=rails-2.1.4&w=412&h=470&fit=fill&dpr=1&bg=ffffff&fm=pjpg&trim=auto&trimmd=0&q=39&auto=compress\",\n    basePrice: 3.55\n  }\n];\n\nconst breaksAsList = [12, 24, 48, 72, 144, 288, 576, 1000];\n\nconst priceBreaks = {\n  12: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 2.61,\n    color2PerSide: 3.77,\n    color3PerSide: 4.36,\n    color4PerSide: 4.93,\n    color5PerSide: 6.09,\n    color6PerSide: 7.25\n  },\n  24: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 1.68,\n    color2PerSide: 2.55,\n    color3PerSide: 3.42,\n    color4PerSide: 4.25,\n    color5PerSide: 5.12,\n    color6PerSide: 5.95\n  },\n  48: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 1.35,\n    color2PerSide: 1.91,\n    color3PerSide: 2.46,\n    color4PerSide: 3.04,\n    color5PerSide: 3.59,\n    color6PerSide: 4.15\n  },\n  72: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 1.05,\n    color2PerSide: 1.49,\n    color3PerSide: 1.95,\n    color4PerSide: 2.38,\n    color5PerSide: 2.82,\n    color6PerSide: 3.26\n  },\n  144: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 0.79,\n    color2PerSide: 1.12,\n    color3PerSide: 1.45,\n    color4PerSide: 1.78,\n    color5PerSide: 2.12,\n    color6PerSide: 2.44\n  },\n  288: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 0.61,\n    color2PerSide: 0.78,\n    color3PerSide: 1.11,\n    color4PerSide: 1.33,\n    color5PerSide: 1.56,\n    color6PerSide: 1.77\n  },\n  576: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 0.49,\n    color2PerSide: 0.61,\n    color3PerSide: 0.94,\n    color4PerSide: 1.11,\n    color5PerSide: 1.27,\n    color6PerSide: 1.44\n  },\n  1000: {\n    color1: 15.0,\n    color2: 30.0,\n    color3: 45.0,\n    color4: 60.0,\n    color5: 75.0,\n    color6: 90.0,\n    color1PerSide: 0.47,\n    color2PerSide: 0.59,\n    color3PerSide: 0.72,\n    color4PerSide: 0.83,\n    color5PerSide: 0.94,\n    color6PerSide: 1.05\n  }\n};\n\nconst getLowerBreak = num => {\n  return Math.max(...breaksAsList.filter(opt => opt <= num));\n};\n\nconst getUpperBreak = num => {\n  return Math.min(...breaksAsList.filter(opt => opt >= num));\n};\n\nconst buildPriceBreak = numShirts => {\n  const lowerBreak = getLowerBreak(numShirts);\n  const upperBreak = getUpperBreak(numShirts);\n  const defaultBreak = priceBreaks[upperBreak];\n\n  if (lowerBreak === upperBreak) {\n    return defaultBreak;\n  }\n\n  let priceBreak = {};\n  Object.keys(defaultBreak).forEach(attribute => {\n    const lowerBreakPrice = priceBreaks[lowerBreak][attribute];\n    const upperBreakPrice = priceBreaks[upperBreak][attribute];\n\n    const slope =\n      (upperBreakPrice - lowerBreakPrice) / (upperBreak - lowerBreak);\n\n    priceBreak[attribute] = slope * (numShirts - lowerBreak) + lowerBreakPrice;\n  });\n\n  return priceBreak;\n};\n\nconst getBaseColorPrice = (priceBreak, numColors) => {\n  return priceBreak[`color${numColors}`];\n};\n\nconst getPerSideColorPrice = (priceBreak, numColors) => {\n  return priceBreak[`color${numColors}PerSide`];\n};\n\nconst getGarmetPrice = nameString => {\n  return garments.find(g => g.name === nameString).basePrice;\n};\n\nexport const calculateQuote = (garmentName, numShirts, numColors, numSides) => {\n  const activeBreak = buildPriceBreak(numShirts);\n  const baseColorPrice = getBaseColorPrice(activeBreak, numColors);\n  const perGarmetPrice = getGarmetPrice(garmentName);\n  const perSideColorPrice = getPerSideColorPrice(activeBreak, numColors);\n\n  return (\n    baseColorPrice +\n    perGarmetPrice * numShirts +\n    perSideColorPrice * numSides * numShirts\n  ).toFixed(2);\n};\n","import React, { useState } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport * as Yup from 'yup';\nimport classNames from \"classnames\";\n\nimport { calculateQuote } from \"./lib\";\n\nconst printLocations = [\n  { label: \"Front\", id: \"print-front\" },\n  { label: \"Back\", id: \"print-back\" },\n  { label: \"Right Sleeve\", id: \"print-right\" },\n  { label: \"Left Sleeve\", id: \"print-left\" },\n];\n\n// Input feedback\nconst InputFeedback = ({ error }) =>\n  error ? <div className={classNames(\"input-feedback\")}>{error}</div> : null;\n\n// Checkbox input\nconst Checkbox = ({\n  field: { name, value, onChange, onBlur },\n  form: { errors, touched, setFieldValue },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n    <div>\n      <input\n        name={name}\n        id={id}\n        type=\"checkbox\"\n        value={value}\n        checked={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={classNames(\"radio-button\")}\n      />\n      <label htmlFor={id}>{label}</label>\n      {touched[name] && <InputFeedback error={errors[name]} />}\n    </div>\n  );\n};\n\n// Checkbox group\nclass CheckboxGroup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleChange = event => {\n    const target = event.currentTarget;\n    let valueArray = [...this.props.value] || [];\n\n    if (target.checked) {\n      valueArray.push(target.id);\n    } else {\n      valueArray.splice(valueArray.indexOf(target.id), 1);\n    }\n\n    this.props.onChange(this.props.id, valueArray);\n  };\n\n  handleBlur = () => {\n    // take care of touched\n    this.props.onBlur(this.props.id, true);\n  };\n\n  render() {\n    const { value, error, touched, label, className, children } = this.props;\n\n    const classes = classNames(\n      \"input-field\",\n      {\n        \"is-success\": value || (!error && touched), // handle prefilled or user-filled\n        \"is-error\": !!error && touched\n      },\n      className\n    );\n\n    return (\n      <div className={classes}>\n        <fieldset>\n          <legend>{label}</legend>\n          {React.Children.map(children, child => {\n            return React.cloneElement(child, {\n              field: {\n                value: value.includes(child.props.id),\n                onChange: this.handleChange,\n                onBlur: this.handleBlur\n              }\n            });\n          })}\n          {touched && <InputFeedback error={error} />}\n        </fieldset>\n      </div>\n    );\n  }\n}\n\n// Radio input\nconst RadioButton = ({\n  field: { name, value, onChange, onBlur },\n  id,\n  label,\n  className,\n  ...props\n}) => {\n  return (\n    <div>\n      <input\n        name={name}\n        id={id}\n        type=\"radio\"\n        value={id} // could be something else for output?\n        checked={id === value}\n        onChange={onChange}\n        onBlur={onBlur}\n        className={classNames(\"radio-button\")}\n        {...props}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n};\n\n// Radio group\nconst RadioButtonGroup = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children\n}) => {\n  const classes = classNames(\n    \"input-field\",\n    {\n      \"is-success\": value || (!error && touched), // handle prefilled or user-filled\n      \"is-error\": !!error && touched\n    },\n    className\n  );\n\n  return (\n    <div className={classes}>\n      <fieldset>\n        <legend>{label}</legend>\n        {children}\n        {touched && <InputFeedback error={error} />}\n      </fieldset>\n    </div>\n  );\n};\n\n// standard input\nconst InputField = ({\n  value,\n  error,\n  touched,\n  id,\n  label,\n  className,\n  children,\n}) => {\n  const classes = classNames(\n    \"input-field\",\n    {\n      \"is-success\": value || (!error && touched), // handle prefilled or user-filled\n      \"is-error\": !!error && touched\n    },\n    className\n  );\n\n  return (\n    <div className={classes}>\n      <fieldset>\n        <legend>{label}</legend>\n        {children}\n        {touched && <InputFeedback error={error} />}\n      </fieldset>\n    </div>\n  );\n};\n\n\nconst QuoteBuilder = ({ garment }) => {\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [quote, setQuote] = useState(null);\n\n  return (\n    <div className=\"quoteBuilder\">\n      <h1>Get a quote!</h1>\n      <Formik\n        initialValues={{\n          numShirts: \"\",\n          numColors: \"\",\n          printLocations: [],\n        }}\n        validationSchema={Yup.object().shape({\n          numShirts: Yup.number().moreThan(11, \"12 shirts is our minimum\").lessThan(1001, \"To get a quote for more than 1000 shirts, please contact our team directly\"),\n          numColors: Yup.string().required(\"At least one color is required\"),\n          printLocations: Yup.array().required(\n            \"At least one is required\"\n          ),\n        })}\n        onSubmit={(values, actions) => {\n          setIsCalculating(true);\n\n          setTimeout(() => {\n            const numShirts = parseInt(values.numShirts, 10);\n            const numColors = parseInt(values.numColors, 10);\n            const numLocations = values.printLocations.filter(l => !!l).length;\n\n            const calculated = calculateQuote(garment.name, numShirts, numColors, numLocations);\n            setQuote(`For ${numShirts} ${garment.name} shirts with ${numColors} colors and ${numLocations} print locations, we can quote you at $${calculated}!`);\n\n            actions.setSubmitting(false);\n            setIsCalculating(false);\n          }, 1500);\n        }}\n        render={({\n          handleSubmit,\n          setFieldValue,\n          setFieldTouched,\n          values,\n          errors,\n          touched,\n          isSubmitting\n        }) => (\n            <form onSubmit={handleSubmit}>\n\n              {/* <h2>Number of Shirts</h2> */}\n              <InputField\n                id=\"numShirts\"\n                label=\"Total shirt count\"\n                value={values.numShirts}\n                error={errors.numShirts}\n                touched={touched.numShirts}\n              >\n                <Field type=\"number\" name=\"numShirts\" placeholder=\"12 - 1000\" />\n              </InputField>\n\n              {/* <h2>Number of Colors</h2> */}\n              <RadioButtonGroup\n                id=\"numColors\"\n                label=\"One of these please\"\n                value={values.numColors}\n                error={errors.numColors}\n                touched={touched.numColors}\n              >\n                {[1, 2, 3, 4, 5, 6].map(num =>\n                  <Field\n                    key={num}\n                    component={RadioButton}\n                    name=\"numColors\"\n                    id={`${num}Color`}\n                    label={num}\n                  />\n                )}\n              </RadioButtonGroup>\n\n              {/* <h2>Print Locations</h2> */}\n              <CheckboxGroup\n                id=\"printLocations\"\n                label=\"Select your location...\"\n                value={values.printLocations}\n                error={errors.printLocations}\n                touched={touched.printLocations}\n                onChange={setFieldValue}\n                onBlur={setFieldTouched}\n              >\n                {printLocations.map(printLocation =>\n                  <Field\n                    key={printLocation.id}\n                    component={Checkbox}\n                    name=\"printLocations\"\n                    id={printLocation.id}\n                    label={printLocation.label}\n                  />)}\n              </CheckboxGroup>\n\n              <button type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </button>\n            </form>\n          )}\n      />\n      {isCalculating && <p>Calculating...</p>}\n      {!isCalculating && !!quote && <p>{quote}</p>}\n    </div>\n  )\n}\n\nexport default QuoteBuilder;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport classNames from \"classnames\";\n\nimport QuoteBuilder from \"./QuoteBuilder\";\n\nimport { garments } from \"./lib\";\n\nfunction App() {\n  const [activeGarmentName, setActiveGarmentName] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <main>\n        {garments.map((garment, i) => {\n          const isActive = activeGarmentName === garment.name;\n          return (\n            <div\n              key={i}\n              className={classNames(\"garmet\", { \"garmet--active\": isActive })}\n            >\n              <div className=\"garmetCard\">\n                <img\n                  src={garment.imageUrl}\n                  className=\"garmetImg\"\n                  alt={garment.name}\n                />\n                <h2>{garment.name}</h2>\n                <p>{garment.description}</p>\n                {isActive ? (\n                  <button onClick={() => setActiveGarmentName(null)}>\n                    Close\n                </button>\n                ) : (\n                    <button onClick={() => setActiveGarmentName(garment.name)}>\n                      Get Quote\n                </button>\n                  )}\n              </div>\n\n              {isActive && <QuoteBuilder garment={garment} />}\n            </div>\n          );\n        })}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}